// Copyright 2015 ThoughtWorks, Inc.

// This file is part of getgauge/Intellij-plugin.

// getgauge/Intellij-plugin is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// getgauge/Intellij-plugin is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with getgauge/Intellij-plugin.  If not, see <http://www.gnu.org/licenses/>.


{
  parserClass="com.thoughtworks.gauge.parser.ConceptParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Concept"
  psiImplClassSuffix="Impl"
  psiPackage="com.thoughtworks.gauge.language.psi"
  psiImplPackage="com.thoughtworks.gauge.language.psi.impl"

  elementTypeHolderClass="com.thoughtworks.gauge.language.token.ConceptTokenTypes"
  elementTypeClass="com.thoughtworks.gauge.language.token.ConceptElementType"
  tokenTypeClass="com.thoughtworks.gauge.language.token.ConceptTokenType"

  psiImplUtilClass="com.thoughtworks.gauge.language.psi.ConceptPsiImplUtil"

}

conceptFile ::= concept+
concept ::= (comment)* conceptHeading NEW_LINE* (step NEW_LINE* | comment) +
private comment ::= COMMENT
conceptHeading ::= CONCEPT_HEADING_IDENTIFIER (CONCEPT_HEADING|dynamicArg)*
step ::= STEP_IDENTIFIER (arg|STEP)+ table?    {mixin="com.thoughtworks.gauge.language.psi.impl.ConceptNamedElementImpl"
                                   implements="com.thoughtworks.gauge.language.psi.ConceptNamedElement" methods = [getStepValue]}
arg ::= dynamicArg | staticArg
dynamicArg ::= DYNAMIC_ARG_START DYNAMIC_ARG DYNAMIC_ARG_END
staticArg ::= ARG_START ARG? ARG_END
table ::= tableHeader tableBody
tableHeader ::= TABLE_BORDER (TABLE_HEADER TABLE_BORDER)+ NEW_LINE ((TABLE_BORDER)* NEW_LINE)?
tableBody ::=(TABLE_BORDER (WHITESPACE* tableRowValue? WHITESPACE* TABLE_BORDER)+ NEW_LINE)*
tableRowValue ::= TABLE_ROW_VALUE | DYNAMIC_ARG_START DYNAMIC_ARG DYNAMIC_ARG_END