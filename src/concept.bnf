{
  parserClass="com.thoughtworks.gauge.parser.ConceptParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Concept"
  psiImplClassSuffix="Impl"
  psiPackage="com.thoughtworks.gauge.language.psi"
  psiImplPackage="com.thoughtworks.gauge.language.psi.impl"

  elementTypeHolderClass="com.thoughtworks.gauge.language.token.ConceptTokenTypes"
  elementTypeClass="com.thoughtworks.gauge.language.token.ConceptElementType"
  tokenTypeClass="com.thoughtworks.gauge.language.token.ConceptTokenType"

  psiImplUtilClass="com.thoughtworks.gauge.language.psi.ConceptPsiImplUtil"

}

conceptFile ::= concept+
concept ::= (comment)* conceptHeading (step | comment)+
private comment ::= COMMENT
private conceptHeading ::= CONCEPT_HEADING
step ::= STEP_IDENTIFIER (arg|STEP)+ table?    {mixin="com.thoughtworks.gauge.language.psi.impl.ConceptNamedElementImpl"
                                   implements="com.thoughtworks.gauge.language.psi.ConceptNamedElement" methods = [getStepValue]}
arg ::= dynamicArg | staticArg
dynamicArg ::= DYNAMIC_ARG_START DYNAMIC_ARG DYNAMIC_ARG_END
staticArg ::= ARG_START ARG? ARG_END
table ::= tableHeader tableBody
tableHeader ::= TABLE_BORDER (TABLE_HEADER TABLE_BORDER)+ NEW_LINE ((TABLE_BORDER)* NEW_LINE)?
tableBody ::=(TABLE_BORDER (WHITESPACE* tableRowValue? WHITESPACE* TABLE_BORDER)+ NEW_LINE)*
tableRowValue ::= TABLE_ROW_VALUE | DYNAMIC_ARG_START DYNAMIC_ARG DYNAMIC_ARG_END